name: Build time integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test-build-time-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        working-directory: build-time-integration
        run: |
          npm install

      - name: Lint Display
        working-directory: build-time-integration
        run: |
          npx nx run display:lint
      - name: Lint Main
        working-directory: build-time-integration
        run: |
          npx nx run main:lint

  test-client-side-integration-display:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client-side-integration/display

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install

      - name: Lint
        run: |
          npx eslint src
      - name: Unit tests
        run: |
          npx jest

  deploy-client-side-integration-display:
    needs: test-client-side-integration-display
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Copy contents
        uses: appleboy/scp-action@master
        env:
          HOST: ${{secrets.HOST}}
          USERNAME: ${{secrets.USERNAME}}
          PASSWORD: ${{secrets.PASSWORD}}
          PORT: ${{secrets.PORT}}
        with:
          source: "client-side-integration/display"
          target: "/var/www/microfrontend-coursework/client-side-integration/display"

      - name: Building App
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{secrets.HOST}}
          USERNAME: ${{secrets.USERNAME}}
          PASSWORD: ${{secrets.PASSWORD}}
          PORT: ${{secrets.PORT}}
          SCRIPT: >
            cd /var/www/microfrontend-coursework/client-side-integration/display
            && docker-compose up -d

  test-client-side-integration-main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client-side-integration/main

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install

      - name: Lint
        run: |
          npx eslint src

  test-iframe-integration-main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iframe-integration/main

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install

      - name: Lint
        run: |
          npx eslint src

  test-iframe-integration-display:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iframe-integration/display

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install

      - name: Lint
        run: |
          npx eslint src

  test-web-component-integration-display:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web-component-integration/display

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install

      - name: Lint
        run: |
          npx eslint src
  test-web-component-integration-main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web-component-integration/main

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          npm install

      - name: Lint
        run: |
          npx eslint src
